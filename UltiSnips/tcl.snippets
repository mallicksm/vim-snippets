priority -50

snippet title
#===============================================================================
# Tcl
# Created: `date`
# Author: `echo $USER`
#
# Note:
#
# Description: ${2:<Description>}
#
#===============================================================================
endsnippet

snippet for "for... (for)" b
for {${1:set i 0}} {${2:\$i < \$n}} {${3:incr i}} {
	$4
}
endsnippet

snippet foreach "foreach... (foreach)"
foreach ${1:var} ${2:\$list} {
	$3
}
endsnippet

snippet if "if... (if)" b
if {(${1:condition1}) && (${2:condition2})} {
	${2:Statements}
}
endsnippet

snippet proc "proc... (proc)" b
proc ${1:name} {${2:args}} \
{
	$3
}
endsnippet

snippet switch "switch... (switch)" b
switch ${1:-exact} -- ${2:\$var} {
	${3:match} {
		$4
	}
	default {$5}
}
endsnippet

snippet while "while... (while)" b
while {${1:condition}} {
	$2
}
endsnippet

snippet getopt
# getopt Argument Parsing
array set opt {HELP "" SWITCH "" NAME "" ARGS ""}
while {[llength $args]} {
	set arg [lindex $args 0]
	switch -regexp $arg {
		"-h|--help" {
			set args [lassign $args -]
			set opt(HELP) yes
		}
		"-s|--switch" {
			set args [lassign $args -]
			set opt(SWITCH) yes
		}
		"-n|--name" {
			set args [lassign $args - opt(NAME)]
		}
		"-+" {
			puts "Attention: Unknown argument $arg"
			return
		}
		default {
			set args [lassign $args pos]
			lappend opt(ARGS) ${pos}
		}
	}
}

# Process -h -------------------------------------------------------------------
if {$opt(HELP) == "yes"} {
	puts "usage: tclsh [info script] \[options\]
			
			Options:
			-h|help   Display this message"
	return
}

# ------------------------------------------------------------------------------
puts "My name is $opt(NAME) and switch is $opt(SWITCH)"
puts "remainder args are $opt(ARGS)"
endsnippet
